1. Create a ValueNotifier:
  You can create a ValueNotifier to hold any type of value, like a number, string, or boolean.
  // Example: Counter that starts at 0
ValueNotifier<int> counter = ValueNotifier<int>(0);


2. Access or Update the Value:
  You can read the value with counter.value and update it the same way.
  
print(counter.value);  // Get the value (0)
counter.value++;       // Increment the value (1)


3. Listen for Changes:
   Add a listener to perform an action when the value changes.

Example:
// Add a listener to watch for changes
counter.addListener(() {
  print('New value: ${counter.value}');
});
   
  Use ValueListenableBuilder:
   To update the UI automatically, use ValueListenableBuilder.
  
Example:
 ValueListenableBuilder<int>(
  valueListenable: counter,
  builder: (context, value, child) {
    return Text('Counter: $value');
  },
)


4. Dispose When Done:
   If you’re using ValueNotifier in a StatefulWidget, don’t forget to dispose of it to avoid memory leaks.
@override
void dispose() {
  counter.dispose();
  super.dispose();
}




